/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { EscrowSrc, EscrowSrcInterface } from "../EscrowSrc";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "rescueDelay",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "accessToken",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "FACTORY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "PROXY_BYTECODE_HASH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "RESCUE_DELAY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cancel",
    inputs: [
      {
        name: "immutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "publicCancel",
    inputs: [
      {
        name: "immutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "publicWithdraw",
    inputs: [
      {
        name: "secret",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "immutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rescueFunds",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "immutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "secret",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "immutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdrawTo",
    inputs: [
      {
        name: "secret",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
      {
        name: "immutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "EscrowCancelled",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "EscrowWithdrawal",
    inputs: [
      {
        name: "secret",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FundsRescued",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InvalidCaller",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidImmutables",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSecret",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidTime",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeTokenSendingFailure",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeTransferFailed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6101003461011557601f610b4f38819003918201601f19168301916001600160401b038311848410176101195780849260409485528339810103126101155780519063ffffffff82168092036101155760200151906001600160a01b0382168203610115573360c05260a0526080526e5af43d82803e903d91602b57fd5bf360205230601152763d602d80600a3d3981f3363d3d373d3d3d363d730000003060881c175f52603760092060e052604051610a21908161012e823960805181818160f801526105bf015260a051818181609b01526103b8015260c05181818161049a015281816107e40152818161087101526108eb015260e051818181610463015281816107b90152818161084601526108c00152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080604090808252600480361015610015575f80fd5b60e05f35811c9283630af97558146105875750826323305703146104c95782632dd310001461048657826334862b6a1461044c5782634649088b146103635782636c10c0c81461026157826390d3252f1461020d578263daff233e146100c257505063f56cd69c14610085575f80fd5b346100be575f3660031901126100be57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5f80fd5b83346100be576101003660031901126100be5780516370a0823160e01b815233848201526001600160a01b0392906020816024817f000000000000000000000000000000000000000000000000000000000000000088165afa908115610203575f916101d1575b50156101c15763ffffffff60e43580921c9160601c1681018091116101ae57421061019f5761016d8261015a610831565b60a4359080604435169060843516610926565b61017960c4353361098d565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a95f80a1005b516337bf561360e11b81529050fd5b601184634e487b7160e01b5f525260245ffd5b81516348f5c3ed60e01b81528490fd5b90506020813d6020116101fb575b816101ec60209383610729565b810103126100be575185610129565b3d91506101df565b83513d5f823e3d90fd5b5082346100be576101003660031901126100be576001600160a01b0390606435821633036102525761024060e43561075f565b421061019f5761016d8261015a610831565b516348f5c3ed60e01b81529050fd5b5082346100be576101403660031901126100be578135916001600160a01b03906024359082821682036100be576101003660431901126100be578260a43516330361035557610124356102b38161078d565b4210610346576102c29061075f565b421015610338576102d16107a4565b845f5260205f206064350361032a577fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc171056020868661031660e4358760c4358a16610926565b610323610104353361098d565b51908152a1005b835163abab6bd760e01b8152fd5b83516337bf561360e11b8152fd5b5083516337bf561360e11b8152fd5b83516348f5c3ed60e01b8152fd5b8390346100be576101403660031901126100be576001600160a01b03833581811692908390036100be57602435916101003660431901126100be5760a43516330361043c576103b06107a4565b61012435901c7f000000000000000000000000000000000000000000000000000000000000000001421061042d577fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac93508161041d57610410813361098d565b82519182526020820152a1005b610428813384610926565b610410565b5050516337bf561360e11b8152fd5b505050516348f5c3ed60e01b8152fd5b83346100be575f3660031901126100be57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b83346100be575f3660031901126100be57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8390346100be576104d936610706565b909390916001600160a01b039190606084013583163303610578578301356105008161078d565b42106103465761050f9061075f565b4210156103385761051f836108ac565b845f5260205f2060208401350361032a577fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc171056020868661032360c08861057060a08201353360808401358c16610926565b01353361098d565b5083516348f5c3ed60e01b8152fd5b8285346100be5761059736610706565b6370a0823160e01b855233858501529460209491936001600160a01b039290919086816024817f000000000000000000000000000000000000000000000000000000000000000088165afa9081156106fc575f916106cf575b50156106c0578087013580911c63ffffffff82881c1681018091116106ad57421061069e5761061e9061075f565b4210156106905761062e866108ac565b835f52845f208587013503610682575060c0856105706103239360a07fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc17105990135908060608501351690608085013516610926565b825163abab6bd760e01b8152fd5b82516337bf561360e11b8152fd5b5082516337bf561360e11b8152fd5b601183634e487b7160e01b5f525260245ffd5b5082516348f5c3ed60e01b8152fd5b90508681813d83116106f5575b6106e68183610729565b810103126100be5751886105f0565b503d6106dc565b85513d5f823e3d90fd5b906101206003198301126100be576101006004359260231901126100be57602490565b90601f8019910116810190811067ffffffffffffffff82111761074b57604052565b634e487b7160e01b5f52604160045260245ffd5b63ffffffff8160e01c9160401c1681018091116107795790565b634e487b7160e01b5f52601160045260245ffd5b63ffffffff8160e01c911681018091116107795790565b600b60405161010090816044823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153605590206001600160a01b0316300361081f57565b604051635134a42560e11b8152600490fd5b600b60405161010090816004823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153605590206001600160a01b0316300361081f57565b600b906040516101008092823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153605590206001600160a01b0316300361081f57565b9160446020925f926040519163a9059cbb60e01b83526004830152602482015282855af1908161096b575b501561095957565b60405163fb7f507960e01b8152600490fd5b90503d15610985575060015f5114601f3d11165b5f610951565b3b151561097f565b5f80809381935af13d156109e6573d67ffffffffffffffff811161074b57604051906109c3601f8201601f191660200183610729565b81525f60203d92013e5b156109d457565b604051638a0332d560e01b8152600490fd5b6109cd56fea2646970667358221220c49d0687246f8e8072d943d68473e62c75c093849586102605e7033c7c149cb064736f6c63430008170033";

type EscrowSrcConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowSrcConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EscrowSrc__factory extends ContractFactory {
  constructor(...args: EscrowSrcConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      rescueDelay,
      accessToken,
      overrides || {}
    );
  }
  override deploy(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(rescueDelay, accessToken, overrides || {}) as Promise<
      EscrowSrc & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EscrowSrc__factory {
    return super.connect(runner) as EscrowSrc__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowSrcInterface {
    return new Interface(_abi) as EscrowSrcInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EscrowSrc {
    return new Contract(address, _abi, runner) as unknown as EscrowSrc;
  }
}
