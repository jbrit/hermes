/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IERC7597Permit,
  IERC7597PermitInterface,
} from "../IERC7597Permit";

const _abi = [
  {
    type: "function",
    name: "permit",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "deadline",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "signature",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export class IERC7597Permit__factory {
  static readonly abi = _abi;
  static createInterface(): IERC7597PermitInterface {
    return new Interface(_abi) as IERC7597PermitInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IERC7597Permit {
    return new Contract(address, _abi, runner) as unknown as IERC7597Permit;
  }
}
