/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  NoReceiveCaller,
  NoReceiveCallerInterface,
} from "../NoReceiveCaller";

const _abi = [
  {
    type: "function",
    name: "arbitraryCall",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
      {
        name: "arguments",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761012a908161001b8239f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c632154bf28146023575f80fd5b3460f057604036600319011260f057600435906001600160a01b038216820360f05760243567ffffffffffffffff9283821160f0573660238301121560f05781600401359284841160f057366024858501011160f0575f8185829660248497018337810182815203925af1903d1560eb573d81811160d75760405191601f8201601f19908116603f011683019081118382101760d75760405281525f60203d92013e5b1560cc57005b6040513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b5060c6565b5f80fdfea2646970667358221220247f315fc6fc9b02464272bb79e95eeaa762b70ce4ca9266fb1c2c138a9a056e64736f6c63430008170033";

type NoReceiveCallerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NoReceiveCallerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NoReceiveCaller__factory extends ContractFactory {
  constructor(...args: NoReceiveCallerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NoReceiveCaller & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NoReceiveCaller__factory {
    return super.connect(runner) as NoReceiveCaller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NoReceiveCallerInterface {
    return new Interface(_abi) as NoReceiveCallerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NoReceiveCaller {
    return new Contract(address, _abi, runner) as unknown as NoReceiveCaller;
  }
}
