/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { EscrowDst, EscrowDstInterface } from "../EscrowDst";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "rescueDelay",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "accessToken",
        type: "address",
        internalType: "contract IERC20",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "FACTORY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "PROXY_BYTECODE_HASH",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "RESCUE_DELAY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "cancel",
    inputs: [
      {
        name: "immutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "publicWithdraw",
    inputs: [
      {
        name: "secret",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "immutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "rescueFunds",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "immutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "withdraw",
    inputs: [
      {
        name: "secret",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "immutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "EscrowCancelled",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "EscrowWithdrawal",
    inputs: [
      {
        name: "secret",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "FundsRescued",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "InvalidCaller",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidImmutables",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSecret",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidTime",
    inputs: [],
  },
  {
    type: "error",
    name: "NativeTokenSendingFailure",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeTransferFailed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6101003461010e57601f6108aa38819003918201601f19168301916001600160401b0383118484101761011257808492604094855283398101031261010e5780519063ffffffff821680920361010e5760200151906001600160a01b038216820361010e573360c05260a0526080526e5af43d82803e903d91602b57fd5bf360205230601152763d602d80600a3d3981f3363d3d373d3d3d363d730000003060881c175f52603760092060e0526040516107839081610127823960805181610419015260a0518181816085015261027f015260c051818181610113015281816102490152818161035b015261056c015260e05181818160e90152818161021f0152818161032401526105420152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080604090808252600480361015610015575f80fd5b60e05f35811c9283630af97558146103f057508263233057031461038a5782632dd310001461034757826334862b6a1461030d5782634649088b146101c35750816390d3252f146100ac575063f56cd69c1461006f575f80fd5b346100a8575f3660031901126100a857602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5f80fd5b82346100a857610100806003193601126100a8576001600160a01b0391606435831691338390036101b3576055600b8592845181898237208451907f00000000000000000000000000000000000000000000000000000000000000008683015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036101a45761014c60e43561063f565b42106101955761016360a43583608435861661066d565b61016f60c435336106ef565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a95f80a1005b516337bf561360e11b81528390fd5b51635134a42560e11b81528390fd5b81516348f5c3ed60e01b81528590fd5b8390346100a8576101403660031901126100a8578235926001600160a01b03808516929091908386036100a85760243592610100806043193601126100a8578160a4351633036102fd57600b60559188518160448237208851907f00000000000000000000000000000000000000000000000000000000000000008a83015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036102ee5761012435901c7f00000000000000000000000000000000000000000000000000000000000000000142106102e057506102d3817fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac95339061066d565b82519182526020820152a1005b83516337bf561360e11b8152fd5b508351635134a42560e11b8152fd5b86516348f5c3ed60e01b81528490fd5b83346100a8575f3660031901126100a857602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b83346100a8575f3660031901126100a857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8390346100a85761039a366104bd565b92909160608401356001600160a01b031633036101b35763ffffffff8185013580921c9160801c1681018091116103dd574210610195576103db8383610516565b005b601185634e487b7160e01b5f525260245ffd5b84346100a8576103ff366104bd565b6370a0823160e01b845233868501529390926020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156104b3575f91610481575b50156101b35763ffffffff8185013580921c9160a01c1681018091116103dd574210610195576103db8383610516565b90506020813d6020116104ab575b8161049c602093836104e0565b810103126100a8575186610451565b3d915061048f565b83513d5f823e3d90fd5b906101206003198301126100a8576101006004359260231901126100a857602490565b90601f8019910116810190811067ffffffffffffffff82111761050257604052565b634e487b7160e01b5f52604160045260245ffd5b9061052460e082013561063f565b42101561062d576040906055600b83516101009081858237208451907f00000000000000000000000000000000000000000000000000000000000000008683015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153206001600160a01b03908116300361061c57835f5260205f2060208301350361060b579161060460c0836105fc60209660a07fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc1710599970135908087850135169060808501351661066d565b0135336106ef565b51908152a1565b825163abab6bd760e01b8152600490fd5b8251635134a42560e11b8152600490fd5b6040516337bf561360e11b8152600490fd5b63ffffffff8160e01c9160c01c1681018091116106595790565b634e487b7160e01b5f52601160045260245ffd5b6001600160a01b03169190826106895761068792506106ef565b565b60445f916020936040519163a9059cbb60e01b83526004830152602482015282855af190816106cd575b50156106bb57565b60405163fb7f507960e01b8152600490fd5b90503d156106e7575060015f5114601f3d11165b5f6106b3565b3b15156106e1565b5f80809381935af13d15610748573d67ffffffffffffffff81116105025760405190610725601f8201601f1916602001836104e0565b81525f60203d92013e5b1561073657565b604051638a0332d560e01b8152600490fd5b61072f56fea2646970667358221220337fed6eecdbcfebca235f232e250c8ef56ab94311e139e66bd95d1e91b439f964736f6c63430008170033";

type EscrowDstConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowDstConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EscrowDst__factory extends ContractFactory {
  constructor(...args: EscrowDstConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      rescueDelay,
      accessToken,
      overrides || {}
    );
  }
  override deploy(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(rescueDelay, accessToken, overrides || {}) as Promise<
      EscrowDst & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EscrowDst__factory {
    return super.connect(runner) as EscrowDst__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowDstInterface {
    return new Interface(_abi) as EscrowDstInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EscrowDst {
    return new Contract(address, _abi, runner) as unknown as EscrowDst;
  }
}
