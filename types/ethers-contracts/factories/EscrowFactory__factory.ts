/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { EscrowFactory, EscrowFactoryInterface } from "../EscrowFactory";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "accessToken",
        type: "address",
        internalType: "contract IERC20",
      },
      {
        name: "rescueDelaySrc",
        type: "uint32",
        internalType: "uint32",
      },
      {
        name: "rescueDelayDst",
        type: "uint32",
        internalType: "uint32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ESCROW_DST_IMPLEMENTATION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ESCROW_SRC_IMPLEMENTATION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addressOfEscrowDst",
    inputs: [
      {
        name: "immutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "addressOfEscrowSrc",
    inputs: [
      {
        name: "immutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createDstEscrow",
    inputs: [
      {
        name: "dstImmutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
      {
        name: "srcCancellationTimestamp",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "createSrcEscrow",
    inputs: [
      {
        name: "srcImmutables",
        type: "tuple",
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
      {
        name: "dstComplement",
        type: "tuple",
        internalType: "struct IEscrowFactory.DstImmutablesComplement",
        components: [
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "DstEscrowCreated",
    inputs: [
      {
        name: "escrow",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "hashlock",
        type: "bytes32",
        indexed: false,
        internalType: "bytes32",
      },
      {
        name: "taker",
        type: "uint256",
        indexed: false,
        internalType: "Address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SrcEscrowCreated",
    inputs: [
      {
        name: "srcImmutables",
        type: "tuple",
        indexed: false,
        internalType: "struct IBaseEscrow.Immutables",
        components: [
          {
            name: "orderHash",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "hashlock",
            type: "bytes32",
            internalType: "bytes32",
          },
          {
            name: "maker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "taker",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "token",
            type: "uint256",
            internalType: "Address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "safetyDeposit",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "timelocks",
            type: "uint256",
            internalType: "Timelocks",
          },
        ],
      },
      {
        name: "dstImmutablesComplement",
        type: "tuple",
        indexed: false,
        internalType: "struct IEscrowFactory.DstImmutablesComplement",
        components: [
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "FailedDeployment",
    inputs: [],
  },
  {
    type: "error",
    name: "InsufficientBalance",
    inputs: [
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InsufficientEscrowBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidCreationTime",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidPartialFill",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSecretsAmount",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeTransferFromFailed",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6101003461020d57601f611c2738819003918201601f1916830192916001600160401b0391828511848610176101ef57816060928592604097885283398101031261020d5781516001600160a01b0392909190838316830361020d576100728561006b60208401610211565b9201610211565b90855190610b4f80830190838210868311176101ef5783926100b59288926110d8863963ffffffff90911681526001600160a01b03909116602082015260400190565b03905ff080156102035784166080528451926108aa9182850193858510908511176101ef5784936101059361082e863963ffffffff90911681526001600160a01b03909116602082015260400190565b03905ff09081156101e557806101a4921660a05261015f8160805116763d602d80600a3d3981f3363d3d373d3d3d363d73000000906e5af43d82803e903d91602b57fd5bf36020528060115260881c175f52603760092090565b60c05260a05116763d602d80600a3d3981f3363d3d373d3d3d363d73000000906e5af43d82803e903d91602b57fd5bf36020528060115260881c175f52603760092090565b60e0525161060b9081610223823960805181818161031401526103ae015260a05181818161014101526102d1015260c051816087015260e051816102980152f35b82513d5f823e3d90fd5b634e487b7160e01b5f52604160045260245ffd5b85513d5f823e3d90fd5b5f80fd5b519063ffffffff8216820361020d5756fe60406080815260049081361015610014575f80fd5b60e05f35811c9081630c14c750146103435781637040f17314610300578163ba551177146102bd578163be58e91c14610270578163dea024e4146100c1575063fb6bd47e14610061575f80fd5b346100bd5761010091826003193601126100bd57826100ac9160209484519182372030907f0000000000000000000000000000000000000000000000000000000000000000906105ac565b90516001600160a01b039091168152f35b5f80fd5b9050366003190161012081126100bd576101008091126100bd576001600160a01b0360843581169182159060c4358261025e575b340361024e576101043661049f565b85810180516001600160e01b031642881b1790819052909561010435916101389160c082901c63ffffffff1691901c61051e565b1161023e5784207f00000000000000000000000000000000000000000000000000000000000000003447106102225780763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff6e5af43d82803e903d91602b57fd5bf39360881c16175f5260781b176020526037600934f5918216958615610214577fc30e111dcc74fddc2c3a4d98ffb97adec4485c0a687946bf5b22c2a99c7ff96d6060888888888888156101fc575b5050508051918252602435602083015260643590820152a1005b60a061020c93015191339061053f565b8480806101e2565b855163b06ebf3d60e01b8152fd5b865163cf47918160e01b815247818a0152346024820152604490fd5b8551637a42074b60e11b81528790fd5b85516334f5151d60e01b81528790fd5b61026b9060a4359061051e565b6100f5565b5050346100bd5761010091826003193601126100bd57826100ac9160209484519182372030907f0000000000000000000000000000000000000000000000000000000000000000906105ac565b82346100bd575f3660031901126100bd57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b82346100bd575f3660031901126100bd57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b905082346100bd576003193601610120928382126100bd576101008092126100bd576020366101031901126100bd576001600160a01b036103833661049f565b9582870191825142851b9060018060e01b03161783528488206e5af43d82803e903d91602b57fd5bf37f0000000000000000000000000000000000000000000000000000000000000000763d602d80600a3d3981f3363d3d373d3d3d363d7300000062ffffff8260881c16175f5260781b17602052603760095ff59581871615610491575096816104467fe27eb9e7c00010c7cdd5a74c249634e7cacc1adc4a9539eb63a3b6ef6d0672a49960c094840198818a511660a435926084351661053f565b80519682518852602083015160208901525190870152606081015160608701526080810151608087015260a081015160a0870152015160c085015251908301526101043590820152a1005b825163b06ebf3d60e01b8152fd5b90610100809260031901126100bd5760405191820182811067ffffffffffffffff82111761050a57604052816004358152602435602082015260443560408201526064356060820152608435608082015260a43560a082015260c43560c082015260e060e435910152565b634e487b7160e01b5f52604160045260245ffd5b9190820180921161052b57565b634e487b7160e01b5f52601160045260245ffd5b925f91606491602094604051926323b872dd60e01b845260048401526024830152604482015282855af1908161058a575b501561057857565b60405163f405907160e01b8152600490fd5b90503d156105a4575060015f5114601f3d11165b5f610570565b3b151561059e565b91600b92604051926040840152602083015281520160ff8153605590206001600160a01b03169056fea264697066735822122093e8f1ba96c5f38f46afc1aa81426e476998ca8522ef739064cbeeeb1e8ea14164736f6c634300081700336101003461010e57601f6108aa38819003918201601f19168301916001600160401b0383118484101761011257808492604094855283398101031261010e5780519063ffffffff821680920361010e5760200151906001600160a01b038216820361010e573360c05260a0526080526e5af43d82803e903d91602b57fd5bf360205230601152763d602d80600a3d3981f3363d3d373d3d3d363d730000003060881c175f52603760092060e0526040516107839081610127823960805181610419015260a0518181816085015261027f015260c051818181610113015281816102490152818161035b015261056c015260e05181818160e90152818161021f0152818161032401526105420152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080604090808252600480361015610015575f80fd5b60e05f35811c9283630af97558146103f057508263233057031461038a5782632dd310001461034757826334862b6a1461030d5782634649088b146101c35750816390d3252f146100ac575063f56cd69c1461006f575f80fd5b346100a8575f3660031901126100a857602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5f80fd5b82346100a857610100806003193601126100a8576001600160a01b0391606435831691338390036101b3576055600b8592845181898237208451907f00000000000000000000000000000000000000000000000000000000000000008683015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036101a45761014c60e43561063f565b42106101955761016360a43583608435861661066d565b61016f60c435336106ef565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a95f80a1005b516337bf561360e11b81528390fd5b51635134a42560e11b81528390fd5b81516348f5c3ed60e01b81528590fd5b8390346100a8576101403660031901126100a8578235926001600160a01b03808516929091908386036100a85760243592610100806043193601126100a8578160a4351633036102fd57600b60559188518160448237208851907f00000000000000000000000000000000000000000000000000000000000000008a83015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153201630036102ee5761012435901c7f00000000000000000000000000000000000000000000000000000000000000000142106102e057506102d3817fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac95339061066d565b82519182526020820152a1005b83516337bf561360e11b8152fd5b508351635134a42560e11b8152fd5b86516348f5c3ed60e01b81528490fd5b83346100a8575f3660031901126100a857602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b83346100a8575f3660031901126100a857517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8390346100a85761039a366104bd565b92909160608401356001600160a01b031633036101b35763ffffffff8185013580921c9160801c1681018091116103dd574210610195576103db8383610516565b005b601185634e487b7160e01b5f525260245ffd5b84346100a8576103ff366104bd565b6370a0823160e01b845233868501529390926020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa9081156104b3575f91610481575b50156101b35763ffffffff8185013580921c9160a01c1681018091116103dd574210610195576103db8383610516565b90506020813d6020116104ab575b8161049c602093836104e0565b810103126100a8575186610451565b3d915061048f565b83513d5f823e3d90fd5b906101206003198301126100a8576101006004359260231901126100a857602490565b90601f8019910116810190811067ffffffffffffffff82111761050257604052565b634e487b7160e01b5f52604160045260245ffd5b9061052460e082013561063f565b42101561062d576040906055600b83516101009081858237208451907f00000000000000000000000000000000000000000000000000000000000000008683015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153206001600160a01b03908116300361061c57835f5260205f2060208301350361060b579161060460c0836105fc60209660a07fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc1710599970135908087850135169060808501351661066d565b0135336106ef565b51908152a1565b825163abab6bd760e01b8152600490fd5b8251635134a42560e11b8152600490fd5b6040516337bf561360e11b8152600490fd5b63ffffffff8160e01c9160c01c1681018091116106595790565b634e487b7160e01b5f52601160045260245ffd5b6001600160a01b03169190826106895761068792506106ef565b565b60445f916020936040519163a9059cbb60e01b83526004830152602482015282855af190816106cd575b50156106bb57565b60405163fb7f507960e01b8152600490fd5b90503d156106e7575060015f5114601f3d11165b5f6106b3565b3b15156106e1565b5f80809381935af13d15610748573d67ffffffffffffffff81116105025760405190610725601f8201601f1916602001836104e0565b81525f60203d92013e5b1561073657565b604051638a0332d560e01b8152600490fd5b61072f56fea2646970667358221220337fed6eecdbcfebca235f232e250c8ef56ab94311e139e66bd95d1e91b439f964736f6c634300081700336101003461011557601f610b4f38819003918201601f19168301916001600160401b038311848410176101195780849260409485528339810103126101155780519063ffffffff82168092036101155760200151906001600160a01b0382168203610115573360c05260a0526080526e5af43d82803e903d91602b57fd5bf360205230601152763d602d80600a3d3981f3363d3d373d3d3d363d730000003060881c175f52603760092060e052604051610a21908161012e823960805181818160f801526105bf015260a051818181609b01526103b8015260c05181818161049a015281816107e40152818161087101526108eb015260e051818181610463015281816107b90152818161084601526108c00152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe6080604090808252600480361015610015575f80fd5b60e05f35811c9283630af97558146105875750826323305703146104c95782632dd310001461048657826334862b6a1461044c5782634649088b146103635782636c10c0c81461026157826390d3252f1461020d578263daff233e146100c257505063f56cd69c14610085575f80fd5b346100be575f3660031901126100be57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5f80fd5b83346100be576101003660031901126100be5780516370a0823160e01b815233848201526001600160a01b0392906020816024817f000000000000000000000000000000000000000000000000000000000000000088165afa908115610203575f916101d1575b50156101c15763ffffffff60e43580921c9160601c1681018091116101ae57421061019f5761016d8261015a610831565b60a4359080604435169060843516610926565b61017960c4353361098d565b7f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a95f80a1005b516337bf561360e11b81529050fd5b601184634e487b7160e01b5f525260245ffd5b81516348f5c3ed60e01b81528490fd5b90506020813d6020116101fb575b816101ec60209383610729565b810103126100be575185610129565b3d91506101df565b83513d5f823e3d90fd5b5082346100be576101003660031901126100be576001600160a01b0390606435821633036102525761024060e43561075f565b421061019f5761016d8261015a610831565b516348f5c3ed60e01b81529050fd5b5082346100be576101403660031901126100be578135916001600160a01b03906024359082821682036100be576101003660431901126100be578260a43516330361035557610124356102b38161078d565b4210610346576102c29061075f565b421015610338576102d16107a4565b845f5260205f206064350361032a577fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc171056020868661031660e4358760c4358a16610926565b610323610104353361098d565b51908152a1005b835163abab6bd760e01b8152fd5b83516337bf561360e11b8152fd5b5083516337bf561360e11b8152fd5b83516348f5c3ed60e01b8152fd5b8390346100be576101403660031901126100be576001600160a01b03833581811692908390036100be57602435916101003660431901126100be5760a43516330361043c576103b06107a4565b61012435901c7f000000000000000000000000000000000000000000000000000000000000000001421061042d577fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac93508161041d57610410813361098d565b82519182526020820152a1005b610428813384610926565b610410565b5050516337bf561360e11b8152fd5b505050516348f5c3ed60e01b8152fd5b83346100be575f3660031901126100be57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b83346100be575f3660031901126100be57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8390346100be576104d936610706565b909390916001600160a01b039190606084013583163303610578578301356105008161078d565b42106103465761050f9061075f565b4210156103385761051f836108ac565b845f5260205f2060208401350361032a577fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc171056020868661032360c08861057060a08201353360808401358c16610926565b01353361098d565b5083516348f5c3ed60e01b8152fd5b8285346100be5761059736610706565b6370a0823160e01b855233858501529460209491936001600160a01b039290919086816024817f000000000000000000000000000000000000000000000000000000000000000088165afa9081156106fc575f916106cf575b50156106c0578087013580911c63ffffffff82881c1681018091116106ad57421061069e5761061e9061075f565b4210156106905761062e866108ac565b835f52845f208587013503610682575060c0856105706103239360a07fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc17105990135908060608501351690608085013516610926565b825163abab6bd760e01b8152fd5b82516337bf561360e11b8152fd5b5082516337bf561360e11b8152fd5b601183634e487b7160e01b5f525260245ffd5b5082516348f5c3ed60e01b8152fd5b90508681813d83116106f5575b6106e68183610729565b810103126100be5751886105f0565b503d6106dc565b85513d5f823e3d90fd5b906101206003198301126100be576101006004359260231901126100be57602490565b90601f8019910116810190811067ffffffffffffffff82111761074b57604052565b634e487b7160e01b5f52604160045260245ffd5b63ffffffff8160e01c9160401c1681018091116107795790565b634e487b7160e01b5f52601160045260245ffd5b63ffffffff8160e01c911681018091116107795790565b600b60405161010090816044823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153605590206001600160a01b0316300361081f57565b604051635134a42560e11b8152600490fd5b600b60405161010090816004823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153605590206001600160a01b0316300361081f57565b600b906040516101008092823720604051907f0000000000000000000000000000000000000000000000000000000000000000604083015260208201527f000000000000000000000000000000000000000000000000000000000000000081520160ff8153605590206001600160a01b0316300361081f57565b9160446020925f926040519163a9059cbb60e01b83526004830152602482015282855af1908161096b575b501561095957565b60405163fb7f507960e01b8152600490fd5b90503d15610985575060015f5114601f3d11165b5f610951565b3b151561097f565b5f80809381935af13d156109e6573d67ffffffffffffffff811161074b57604051906109c3601f8201601f191660200183610729565b81525f60203d92013e5b156109d457565b604051638a0332d560e01b8152600490fd5b6109cd56fea2646970667358221220c49d0687246f8e8072d943d68473e62c75c093849586102605e7033c7c149cb064736f6c63430008170033";

type EscrowFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EscrowFactory__factory extends ContractFactory {
  constructor(...args: EscrowFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    accessToken: AddressLike,
    rescueDelaySrc: BigNumberish,
    rescueDelayDst: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      accessToken,
      rescueDelaySrc,
      rescueDelayDst,
      overrides || {}
    );
  }
  override deploy(
    accessToken: AddressLike,
    rescueDelaySrc: BigNumberish,
    rescueDelayDst: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      accessToken,
      rescueDelaySrc,
      rescueDelayDst,
      overrides || {}
    ) as Promise<
      EscrowFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EscrowFactory__factory {
    return super.connect(runner) as EscrowFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowFactoryInterface {
    return new Interface(_abi) as EscrowFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EscrowFactory {
    return new Contract(address, _abi, runner) as unknown as EscrowFactory;
  }
}
